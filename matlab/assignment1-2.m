numexamples = 2;
rate = 1;
examples = [1 1; 0 1]';
desired = [0 1];
inputs1 = 0;
error = 0;
dw = 0;
out = 0;
hiddenbeta = 0;
weights = [-0.1,0.15,0.4,0.3,-0.3,0.4,0.2,-0.25,0.4];
for epoch=1:100
for i=1:2
inputs1(1) = examples(1,i) * weights(1);
inputs1(2) = examples(1,i) * weights(3) + examples(2,1) * weights(4);
inputs1(3) = examples(2,i) * weights(6);
inputs1 = round(inputs1,4);
hidden = 1 ./( 1 + exp( -inputs1 ));
hidden = round(hidden,4);
inputs2(1) = hidden(1) * weights(9);
inputs2(2) = hidden(2) * weights(8);
inputs2(3) = hidden(3) * weights(7);
inputs2(4) = examples(1,i) * weights(2);
inputs2(5) = examples(2,i) * weights(5);
out = sum(inputs2);
out = 1/(1+exp(-out));
out = round(out,4);
error(i) = (desired(i) - out);
beta = out * (1-out) * (desired(i) - out);
beta = round(beta,4);
hiddenbeta(1) = hidden(1)*(1-hidden(1))*(beta*weights(9));
hiddenbeta(2) = hidden(2)*(1-hidden(2))*(beta*weights(8));
hiddenbeta(3) = hidden(3)*(1-hidden(3))*(beta*weights(7));
hiddenbeta = round(hiddenbeta,4);
dw(9) = beta * hidden(1);
dw(8) = beta * hidden(2);
dw(7) = beta * hidden(3);
dw(2) = beta * examples(1,i);
dw(5) = beta * examples(2,i);
dw(1) = hiddenbeta(1) * examples(1,i);
dw(3) = hiddenbeta(2) * examples(1,i);
dw(4) = hiddenbeta(2) * examples(2,i);
dw(6) = hiddenbeta(3) * examples(2,i);
dw = round(dw,4);
weights = weights + dw;
weights = round(weights,4);
end
mse = sum(error.^2);
fprintf('Epoch %3d:  Error = %f\n',epoch,mse);
end